/* tslint:disable */
/* eslint-disable */
/**
 * Note Keeper
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AccountLoginApiRequest,
  AccountLoginApiResponse,
  AccountRegisterApiRequest,
} from '../models/index';
import {
    AccountLoginApiRequestFromJSON,
    AccountLoginApiRequestToJSON,
    AccountLoginApiResponseFromJSON,
    AccountLoginApiResponseToJSON,
    AccountRegisterApiRequestFromJSON,
    AccountRegisterApiRequestToJSON,
} from '../models/index';

export interface UserLoginPutRequest {
    accountLoginApiRequest?: AccountLoginApiRequest;
}

export interface UserRegisterPostRequest {
    accountRegisterApiRequest?: AccountRegisterApiRequest;
}

/**
 * UserApi - interface
 * 
 * @export
 * @interface UserApiInterface
 */
export interface UserApiInterface {
    /**
     * 
     * @param {AccountLoginApiRequest} [accountLoginApiRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApiInterface
     */
    userLoginPutRaw(requestParameters: UserLoginPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountLoginApiResponse>>;

    /**
     */
    userLoginPut(accountLoginApiRequest?: AccountLoginApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountLoginApiResponse>;

    /**
     * 
     * @param {AccountRegisterApiRequest} [accountRegisterApiRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApiInterface
     */
    userRegisterPostRaw(requestParameters: UserRegisterPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     */
    userRegisterPost(accountRegisterApiRequest?: AccountRegisterApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class UserApi extends runtime.BaseAPI implements UserApiInterface {

    /**
     */
    async userLoginPutRaw(requestParameters: UserLoginPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountLoginApiResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/User/login`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: AccountLoginApiRequestToJSON(requestParameters.accountLoginApiRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AccountLoginApiResponseFromJSON(jsonValue));
    }

    /**
     */
    async userLoginPut(accountLoginApiRequest?: AccountLoginApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountLoginApiResponse> {
        const response = await this.userLoginPutRaw({ accountLoginApiRequest: accountLoginApiRequest }, initOverrides);
        return await response.value();
    }

    /**
     */
    async userRegisterPostRaw(requestParameters: UserRegisterPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/User/register`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AccountRegisterApiRequestToJSON(requestParameters.accountRegisterApiRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async userRegisterPost(accountRegisterApiRequest?: AccountRegisterApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.userRegisterPostRaw({ accountRegisterApiRequest: accountRegisterApiRequest }, initOverrides);
    }

}
